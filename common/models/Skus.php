<?php

namespace common\models;

use Yii;
use common\modules\promotion\models\FlashSale;
use common\logic\PromotionLogic;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "{{%skus}}".
 *
 * @property string $sku_id
 * @property integer $product_id
 * @property string $weight
 * @property string $stock
 * @property string $market_price
 * @property string $sale_price
 * @property string $plus_price
 * @property string $sku_num
 * @property string $image
 * @property string $thumbImg
 * @property string $sku_values
 */
class Skus extends \yii\db\ActiveRecord
{
	public $prom;//活动价格，	
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%skus}}';
    }

    
    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            'sku_id'=>[['sku_id'], 'required'],
            [['product_id'], 'integer'],
            [['weight', 'stock', 'market_price', 'sale_price','plus_price'], 'number'],
        	[['stock', 'sale_price'], 'compare', 'compareValue' => 0, 'operator' => '>='],
        	[['stock', 'sale_price'], 'required'],
            [['sku_id'], 'string', 'max' => 100],
        	[['image','thumbImg'], 'string', 'max' => 255],
            [['sku_num'], 'string', 'max' => 45],
        ];
    }
    public function fields()
    {
    	return ArrayHelper::merge(parent::fields(), [    			
    		'prom',
    	]);
    }
    public function getProm(){
    	return $this->prom;
    }

    public function setProm($prom){
    	$this->prom = $prom;
    }
    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'sku_id' => Yii::t('common', 'Sku ID'),
            'product_id' => Yii::t('common', 'Product ID'),
            'weight' => Yii::t('common', '重量'),
            'stock' => Yii::t('common', '库存'),
            'market_price' => Yii::t('common', '市场价'),
            'sale_price' => Yii::t('common', '售价'),
            'sku_num' => Yii::t('common', '编码（条形码）'),
        	'image' => Yii::t('common', ''),
        ];
    }
    
    public function beforeSave($insert){
 
    	return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
  
    public function getProduct(){
         return $this->hasOne(Product::className(),['product_id'=>'product_id']);
    }
    public function getSkuItem(){
        return $this->hasMany(SkuItem::className(),['sku_id'=>'sku_id']);
    }
    
    public function afterFind(){
        if (empty($this->image)) {
            if (count($this->product->image)>0) {
                $this->image = $this->product->image[0]['url'];
            }
        }
        if (empty($this->thumbImg)) {
            if (count($this->product->image)>0) {
                $this->thumbImg = $this->product->image[0]['thumbImg'];
            }
        }
    	$promLogic = new PromotionLogic();
    	//$productType = Product::find()->where(['product_id' => $this->product_id])->select('prom_type')->scalar(); 
    	$openStatus = $promLogic->checkOpen($this->product->prom_type);
    	if ($openStatus){
    		//模块开启
    		switch ($this->product->prom_type){
    			case 1://抢购
    				$now = time();
    				$flashSale = FlashSale::find()->where(['sku_id'=>$this->sku_id,'status'=>1])
    				->andWhere(['>=','end_time',$now])    				
    				->one();
    				$this->setProm($flashSale);   		
    				break;
    			case 2:
    				break;
    			case 3:
    				break;
    			case 4:
    				break;
    			default:
    				break;
    		}
    		
    	}  	
    	
    }
    
}
